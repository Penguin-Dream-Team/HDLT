/*
 * This file is generated by jOOQ.
 */
package sec.hdlt.server.db.database.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import sec.hdlt.server.db.database.tables.UserRequests;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRequestsRecord extends UpdatableRecordImpl<UserRequestsRecord> implements Record2<UInteger, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user_requests.user_id</code>.
     */
    public UserRequestsRecord setUserId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>user_requests.user_id</code>.
     */
    public UInteger getUserId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>user_requests.timestamp</code>.
     */
    public UserRequestsRecord setTimestamp(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>user_requests.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UInteger, LocalDateTime> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UInteger, LocalDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UInteger, LocalDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return UserRequests.USER_REQUESTS.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserRequests.USER_REQUESTS.TIMESTAMP;
    }

    @Override
    public UInteger component1() {
        return getUserId();
    }

    @Override
    public LocalDateTime component2() {
        return getTimestamp();
    }

    @Override
    public UInteger value1() {
        return getUserId();
    }

    @Override
    public LocalDateTime value2() {
        return getTimestamp();
    }

    @Override
    public UserRequestsRecord value1(UInteger value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRequestsRecord value2(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public UserRequestsRecord values(UInteger value1, LocalDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRequestsRecord
     */
    public UserRequestsRecord() {
        super(UserRequests.USER_REQUESTS);
    }

    /**
     * Create a detached, initialised UserRequestsRecord
     */
    public UserRequestsRecord(UInteger userId, LocalDateTime timestamp) {
        super(UserRequests.USER_REQUESTS);

        setUserId(userId);
        setTimestamp(timestamp);
    }
}
