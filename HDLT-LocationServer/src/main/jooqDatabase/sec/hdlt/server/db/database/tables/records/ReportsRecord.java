/*
 * This file is generated by jOOQ.
 */
package sec.hdlt.server.db.database.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;

import sec.hdlt.server.db.database.tables.Reports;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportsRecord extends UpdatableRecordImpl<ReportsRecord> implements Record5<Integer, UInteger, UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>reports.id</code>.
     */
    public ReportsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>reports.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>reports.epoch</code>.
     */
    public ReportsRecord setEpoch(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>reports.epoch</code>.
     */
    public UInteger getEpoch() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>reports.user_id</code>.
     */
    public ReportsRecord setUserId(UInteger value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>reports.user_id</code>.
     */
    public UInteger getUserId() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>reports.x</code>.
     */
    public ReportsRecord setX(UInteger value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>reports.x</code>.
     */
    public UInteger getX() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>reports.y</code>.
     */
    public ReportsRecord setY(UInteger value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>reports.y</code>.
     */
    public UInteger getY() {
        return (UInteger) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, UInteger, UInteger, UInteger, UInteger> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, UInteger, UInteger, UInteger, UInteger> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Reports.REPORTS.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return Reports.REPORTS.EPOCH;
    }

    @Override
    public Field<UInteger> field3() {
        return Reports.REPORTS.USER_ID;
    }

    @Override
    public Field<UInteger> field4() {
        return Reports.REPORTS.X;
    }

    @Override
    public Field<UInteger> field5() {
        return Reports.REPORTS.Y;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getEpoch();
    }

    @Override
    public UInteger component3() {
        return getUserId();
    }

    @Override
    public UInteger component4() {
        return getX();
    }

    @Override
    public UInteger component5() {
        return getY();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getEpoch();
    }

    @Override
    public UInteger value3() {
        return getUserId();
    }

    @Override
    public UInteger value4() {
        return getX();
    }

    @Override
    public UInteger value5() {
        return getY();
    }

    @Override
    public ReportsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ReportsRecord value2(UInteger value) {
        setEpoch(value);
        return this;
    }

    @Override
    public ReportsRecord value3(UInteger value) {
        setUserId(value);
        return this;
    }

    @Override
    public ReportsRecord value4(UInteger value) {
        setX(value);
        return this;
    }

    @Override
    public ReportsRecord value5(UInteger value) {
        setY(value);
        return this;
    }

    @Override
    public ReportsRecord values(Integer value1, UInteger value2, UInteger value3, UInteger value4, UInteger value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReportsRecord
     */
    public ReportsRecord() {
        super(Reports.REPORTS);
    }

    /**
     * Create a detached, initialised ReportsRecord
     */
    public ReportsRecord(Integer id, UInteger epoch, UInteger userId, UInteger x, UInteger y) {
        super(Reports.REPORTS);

        setId(id);
        setEpoch(epoch);
        setUserId(userId);
        setX(x);
        setY(y);
    }
}
