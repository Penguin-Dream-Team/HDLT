syntax = "proto3";

package sec.hdlt.protos.server;

option java_package = "sec.hdlt.protos.server";

service Location {
  rpc SubmitLocationReport (ReportRequest) returns (ReportResponse);
  rpc GetLocationReport (stream UserLocationReportRequest) returns (stream UserLocationReportResponse);
  rpc GetWitnessProofs (WitnessProofsRequest) returns (WitnessProofsResponse);
}

service HA {
  rpc UserLocationReport (stream UserLocationReportRequest) returns (stream UserLocationReportResponse);
  rpc UsersAtCoordinates (UsersAtCoordinatesRequest) returns (UsersAtCoordinatesResponse);
  rpc GetWitnessProofs (WitnessProofsRequest) returns (WitnessProofsResponse);
}

message ReportRequest {
  // All fields are base64-encoded
  string key = 1; // Ciphered with server's public key
  string nonce = 2;
  string ciphertext = 3;
}

message ReportResponse {
  // All fields are base64-encoded
  string key = 1; // Ciphered with server's public key
  string nonce = 2;
  string ciphertext = 3;
}

message UserLocationReportRequest {
  // All fields are base64-encoded
  string key = 1; // Ciphered with server's public key
  string nonce = 2;
  string ciphertext = 3;
}

message UserLocationReportResponse {
  // All fields are base64-encoded
  string nonce = 1;
  string ciphertext = 2;
}

message UsersAtCoordinatesRequest {
  // All fields are base64-encoded
  string key = 1; // Ciphered with server's public key
  string nonce = 2;
  string ciphertext = 3;
}

message UsersAtCoordinatesResponse {
  // All fields are base64-encoded
  string nonce = 1;
  string ciphertext = 2;
}

message WitnessProofsRequest {
  string key = 1; // Ciphered with server's public key
  string nonce = 2;
  string ciphertext = 3;
  ProofOfWork proofOfWork = 4;
}

message WitnessProofsResponse {
  string nonce = 1;
  string ciphertext = 2;
}

message ProofOfWork {
  string data = 1;
  string hash = 2;
  int64 nonce = 3;
}
